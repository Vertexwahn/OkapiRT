"""
    SPDX-FileCopyrightText: Copyright 2024-2025 Julian Amann <dev@vertexwahn.de>
    SPDX-License-Identifier: Apache-2.0
"""

"""de_vertexwahn build and test dependencies."""

module(
    name = "de_vertexwahn",
    version = "0.0.0",
    compatibility_level = 1,
)

# Depend on apple_support first and then rules_cc so that the Xcode toolchain
# from apple_support wins over the generic Unix toolchain from rules_cc.
bazel_dep(name = "apple_support", version = "1.20.0")

# Uncomment to enable rules_qt
"""
bazel_dep(name = "rules_qt")
#local_path_override(
#    module_name = "rules_qt",
#    path = "rules_qt6_bzlmod",
#)
git_override(
    module_name = "rules_qt",
    commit = "3936222583d455aec4d42bd684818283b876773e",
    remote = "https://github.com/Vertexwahn/rules_qt6.git",
)

qt = use_extension("@rules_qt//:extensions.bzl", "qt")
qt.fetch()
use_repo(
    qt,
    "qt_linux_x86_64",
    "qt_windows_x86_64",
    "qt_mac_aarch64",
)
register_toolchains(
    "@rules_qt//tools:all",
    dev_dependency = True,
)
"""

bazel_dep(name = "rules_cuda", version = "0.2.3")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_shell", version = "0.4.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "nasm", version = "2.14.02")

# C++ third party libraries dependencies
bazel_dep(name = "abseil-cpp", version = "20250127.1")
bazel_dep(name = "boost.algorithm", version = "1.87.0")
bazel_dep(name = "boost.asio", version = "1.87.0.bcr.1")
bazel_dep(name = "boost.beast", version = "1.87.0.bcr.1")
bazel_dep(name = "boost.core", version = "1.87.0")
bazel_dep(name = "boost.endian", version = "1.87.0")
bazel_dep(name = "boost.predef", version = "1.87.0")
bazel_dep(name = "boost.program_options", version = "1.87.0")
bazel_dep(name = "boost.uuid", version = "1.87.0")
bazel_dep(name = "cpuinfo", version = "0.0.0-20240417-3c8b153")
bazel_dep(name = "eigen", version = "3.4.0.bcr.2")  #bazel_dep(name = "eigen", version = "4.0.0-20241125") #bazel_dep(name = "eigen", version = "3.4.0.bcr.1")#
bazel_dep(name = "embree", version = "4.3.1")
bazel_dep(name = "flip", version = "1.4")
bazel_dep(name = "fmt", version = "11.1.4")

bazel_dep(name = "glog", version = "0.7.1")
bazel_dep(name = "hypothesis", version = "0.0.0-20240425-3acfea6")
bazel_dep(name = "imath", version = "3.1.12")
bazel_dep(name = "libdeflate", version = "1.23")
bazel_dep(name = "libjpeg_turbo", version = "2.1.4")  # Version 2.1.91 does not compile on windows, does not uses nasm to build
bazel_dep(name = "libpng", version = "1.6.47.bcr.1")
bazel_dep(name = "libwebp", version = "1.5.0")
bazel_dep(name = "nanobind_bazel", version = "2.5.0")
bazel_dep(name = "nlohmann_json", version = "3.11.3.bcr.1")
bazel_dep(name = "onetbb", version = "2021.13.0")
bazel_dep(name = "openexr", version = "3.3.1")
bazel_dep(name = "pcg", version = "0.98.1")
bazel_dep(name = "pugixml", version = "1.15")
bazel_dep(name = "spdlog", version = "1.15.2")
bazel_dep(name = "tinyobjloader", version = "2.0.0-rc1")
bazel_dep(name = "tinyply", version = "2.3.4")
bazel_dep(name = "xtensor")
bazel_dep(name = "xtl")  # bazel_dep(name = "xtl", version = "0.7.7")
bazel_dep(name = "yaml-cpp", version = "0.8.0")
bazel_dep(name = "zlib", version = "1.3.1.bcr.5")
#bazel_dep(name = "openssl", version = "3.3.1.bcr.1")

bazel_dep(name = "catch2", version = "3.8.0", dev_dependency = True)
bazel_dep(name = "google_benchmark", version = "1.9.2", dev_dependency = True)
bazel_dep(name = "googletest", version = "1.16.0", dev_dependency = True)

include("//bazel/module/go:Go.MODULE.bazel")
include("//bazel/module/java:Java.MODULE.bazel")
include("//bazel/module/tools:Tools.MODULE.bazel")

local_path_override(
    module_name = "bazel_iwyu",
    path = "../third_party/bazel_iwyu-85cbd99369a3ed3f8c31234d2d887026f3e66bbc",
)

# This projects intends to stay as close as possible to upstream dependencies (Live at Head). Therefore, upstream
# dependencies are copied on a regular basis 1:1 with some Bazel related patches (if needed) to the `third_party` folder
# and overridden here. If you do not like this approach you can simply remove most of the local_path_override's here and
# live with the newest versions in the BCR (which can be much older).
# Note: Some dependencies are not part in the BCR and therefore a local_path_override might be needed
# here for some libraries.

# Test abseil-cpp from BCR
#local_path_override(
#    module_name = "abseil-cpp",
#    path = "../third_party/abseil-cpp",
#)

local_path_override(
    module_name = "bazel_skylib",
    path = "../third_party/bazel-skylib",
)

local_path_override(
    module_name = "cpuinfo",
    path = "../third_party/cpuinfo",
)

# Seems not to be needed anymore
#bazel_dep(name = "delaunator-cpp", version = "0.0.0-20181007-c1521f6")
#local_path_override(
#    module_name = "delaunator-cpp",
#    path = "../third_party/delaunator-cpp-c1521f6e879881232dcddabd6c2ddb6187e8714b",
#)

local_path_override(
    module_name = "flip",
    path = "../third_party/flip-1.4",
)

local_path_override(
    module_name = "fmt",
    path = "../third_party/fmt",
)

local_path_override(
    module_name = "imath",
    path = "../third_party/Imath",
)

local_path_override(
    module_name = "hypothesis",
    path = "../third_party/hypothesis",
)

local_path_override(
    module_name = "libdeflate",
    path = "../third_party/libdeflate-1.23",
)

local_path_override(
    module_name = "libpng",
    path = "../third_party/libpng-1.6.47",
)

local_path_override(
    module_name = "libwebp",
    path = "../third_party/libwebp-1.5.0",
)

local_path_override(
    module_name = "nasm",
    path = "../third_party/nasm-2.14.02",
)

local_path_override(
    module_name = "onetbb",
    path = "../third_party/oneTBB",
)

local_path_override(
    module_name = "pcg",
    path = "../third_party/pcg-cpp",
)

local_path_override(
    module_name = "pugixml",
    path = "../third_party/pugixml",
)

local_path_override(
    module_name = "rules_pkg",
    path = "../third_party/rules_pkg-1.1.0",
)

local_path_override(
    module_name = "spdlog",
    path = "../third_party/spdlog",
)

local_path_override(
    module_name = "tinyobjloader",
    path = "../third_party/tinyobjloader",
)

local_path_override(
    module_name = "xtensor",
    path = "../third_party/xtensor",
)

local_path_override(
    module_name = "xtl",
    path = "../third_party/xtl",
)

local_path_override(
    module_name = "yaml-cpp",
    path = "../third_party/yaml-cpp",
)

local_path_override(
    module_name = "catch2",
    path = "../third_party/Catch2",
)

local_path_override(
    module_name = "googletest",
    path = "../third_party/googletest",
)

#-------------------------------------------------------------------------------------
# Windows Resource files
#-------------------------------------------------------------------------------------

winsdk_configure = use_repo_rule("//okapi/res:winsdk_configure.bzl", "winsdk_configure")

winsdk_configure(name = "local_config_winsdk")

register_toolchains("@local_config_winsdk//:all")

register_toolchains("//okapi/res:empty_rc_toolchain")

include("//bazel/module/cpp:Cpp.MODULE.bazel")

#-------------------------------------------------------------------------------------
# Python
#-------------------------------------------------------------------------------------

include("//bazel/module/python:Python.MODULE.bazel")

# BEGIN-INTERNAL

include("//bazel/module/oci:Oci.MODULE.bazel")
